{"note":"Don't delete this file! It's used internally to help with page regeneration.","name":"Asset","google":"UA-19336115-9","tagline":"The easier alternative","body":"# Asset keyboard layout\r\n\r\n[Asset](http://millikeys.sourceforge.net/asset/) is an alternative keyboard layout. It was created to introduce significant typing efficiencies over the QWERTY layout without being as difficult to learn as other alternatives like Dvorak, Colemak or Workman.\r\n\r\n![Asset keyboard layout](https://raw.github.com/deekayen/asset/0e220f65f477346b37e5b70b30fba845787b1a05/asset_layout.jpg)\r\n\r\nAfter having tried [Dvorak](http://en.wikipedia.org/wiki/Dvorak_keyboard), [Colemak](http://colemak.com), and [Workman](http://www.workmanlayout.com), I independently concluded the assignment of a key cap in my brain from QWERTY was stuck not only to the hand, but to the finger. When typing in Workman, I continuously typed the letter E with my left, middle finger, which is H in Workman. I thought it was unnecessary to fight my QWERTY training when a few minor modifications to QWERTY could yield significant typing efficiency improvements over QWERTY.\r\n\r\nAsset also acknowledges we live in a QWERTY world. Even if users joined a popular movement to use alternate keyboard layouts, copy/paste, save, select all, and quit are common shortcuts for applications. I see copy/paste as a significant typing-saver, so shifting any of those keys around is doesn't strike me as dealing with modern realities.\r\n\r\n## Maximizing conversion success\r\n\r\nEvery layout has its strengths. The author of Workman is confident in his key cap scoring model, which if applied to U.S. English yields remarkably low effort scores, however the full optimization of Workman compromises the locations for copy/paste, putting them in less efficient locations for frequent copy operations.\r\n\r\nColemak and Asset are similar layouts, but in the design of Asset, the same-finger assignment from QWERTY is considered in the design. Though Colemak is touted for its supposed ease of switching from QWERTY, **Asset keeps 20/26 letters on the same finger**, whereas **Colemak only keeps 15/26**. As the Carpalx study shows, the theoretical loss of efficiency by keeping the QWERTY same-finger design is fractional, perhaps inconsequential.\r\n\r\nThe drastic movement of keys in the Dvorak layout is the main reason [Colemak's FAQ](http://colemak.com/wiki/index.php?title=FAQ#What.27s_wrong_with_the_Dvorak_layout.3F) cites for Dvorak adoption failure. Efforts to achieve \"full optimization\" by moving keys all around the keyboard like in [QGMLWY](http://mkweb.bcgsc.ca/carpalx/?full_optimization), away from their originating QWERTY hand and finger, are also destined for adoption failure.\r\n\r\n**When switching from QWERTY**, as a user who types enough to be concerned enough to switch, the loss of productivity in typing speed and in gained frustration is cause to **minimize not only the general movement of key caps, but the finite movement to a different hand or finger on the same hand**. Maintaining common shortcuts is essential to adoption. The better job you can do at **minimizing frustration and productivity loss**, the more likely **a conversion away from QWERTY will be successful**.\r\n\r\n## Supported platforms\r\n\r\nThis Github project offers Asset layout files for Mac OSX, Windows, Xorg, Linux, FreeBSD, NetBSD, OpenBSD, Solaris."}